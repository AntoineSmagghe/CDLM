{% extends 'base.html.twig' %}
{% block title %}Editeur d'article pour le Chant de la Machine.{% endblock %}
{% block style %}
<link rel="stylesheet" href="/css/edit_post.css"></link>
<link href="https://fonts.googleapis.com/css?family=Quicksand&display=swap" rel="stylesheet">
{% endblock %}
{% block body %}
<div class="undernav"></div>
<section id="edit_post">
    {% if app.request.attributes.get('_route') == 'editPost' %}
    <div class="see_and_delete">
        <a href="{{path("article", {"id": article.id, "format": article.format})}}" class="a_btn btn_more">Voir</a>
        <form method="POST" action="{{ path("delPost", { "id" : article.id }) }}">
            <input type="hidden" name="_method" value="DELETE">
            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ article.id) }}">
            <button class="a_btn btn_del">Supprimer</button>
        </form>
    </div>
    {% endif %}
    {{ form_start(form) }}
        {{ form_row(form.save, {
            'label': 'Enregistrer',
            'attr': {'class': 'a_btn btn_modify'}
        }) }}
        <div class="row">
            <div class="col-md-2">
                {{ form_row(form.date_event, {'label' : 'Date de l\'évènement'}) }}
            </div>
            <div class="col-md-2">
            {{ form_row(form.format, {
                'label': 'Type de l\'article', 
                'placeholder': 'Sélectionnez ici'
                }) }}
            </div>
        </div>
        <div id="add_form_field" >
            <a id="add_sc_btn" class="a_btn btn_modify">Add sound</a>
        </div>
        <div class="row">
            <div class="edit_text_content">
                {{ form_row(form.title, {
                    'label': 'Titre de l\'évènement',
                    'attr': {'placeholder': 'Titre de l\'évènement'}
                }) }}
                {{ form_row(form.text, {
                    'label': 'Contenu',
                    'attr': {
                        'class': 'ckeditor',
                        'placeholder': 'Tappez le texte ici'
                    }
                }) }}
            </div>
            <ul id="list_sc" class="api_data" data-prototype="{{ form_widget(form.api_data.vars.prototype)|e('html_attr') }}">
                {% for sound in form.api_data %}
                <li>
                    {{form_row(sound, {
                        'label': false,
                        'attr': {'class': 'url_SC'}
                    })}}
                    <button class="btn_del_sets" type="button">X</button>
                </li>
                {% endfor %}
            </ul>
        </div>
        {% if app.request.attributes.get('_route') == 'editPost' %}
        <div id="datetime_article">
            <div class="onelinetxt">
                <p>Créé le {{ article.createdAt|date("d/m/Y \à H:i:s", "Europe/Paris") }} par {{ article.user.surname }}</p>
            </div>
            {% if article.modifiedBy != '' %}
            <div class="onelinetxt">
                <p>Modifié le {{ article.updatedAt|date("d/m/Y \à H:i:s", "Europe/Paris") }} par {{ article.modifiedBy.surname }}</p>
            </div>
            {% endif %}
        </div>
        {% endif %}
        <div class="row">
            <div class="col-md-3">
                {{ form_row(form.imgsFile, {
                    'label': 'Upload images',
                }) }}
            </div>
        </div>
    {{form_end(form)}}
    {% if app.request.attributes.get('_route') == 'editPost' %}
        {% if article.imgs.snapshot != null %}
        <div id="gallery">
            <div class="hes-gallery">
            {% for image in article.imgs %}
                <figure class="edit_image" name="{{image.id}}">
                    <img src="{{ vich_uploader_asset(image, 'imgData') }}" alt="Image {{image.id ~ " - De l'article : " ~ article.title}}">
                    <figcaptation class="action_image">
                        <label for="Image {{image.id}}"></label>
                        <input type="radio" id="Image {{image.id}}" name="cover" value="{{image.id}}">
                        <a href="{{ path('delImg', { 'id' : image.id }) }}" data-delete data-token="{{ csrf_token('delete.picture' ~ image.id) }}" class="btn_del_pictures">X</a>
                    </figcaptation>
                </figure>
            {% endfor %}
            </div>
        </div>
        {% endif %}
    {% endif %}
</section>
{% endblock %}
{% block javascripts %}
    <script src="https://cdn.ckeditor.com/ckeditor5/12.4.0/classic/ckeditor.js"></script>
    <script src="/js/Requests.js"></script>
    <script src="https://unpkg.com/hes-gallery/dist/hes-gallery.min.js"></script>
    <script src="/js/addField.js"></script>
    <script type="text/javascript">

    //Input change for select cover image
        const inputsCover = document.getElementsByTagName("input");
        for (let i in inputsCover){
            if (inputsCover[i].type === "radio"){
                inputsCover[i].addEventListener("change", (e)=>{
                    let pictureId = JSON.stringify({"pictureId": e.target.value, "articleId": {{ article.id }} });
                    let req = new Request("{{ path('makeCover') }}", { method: 'POST', body: pictureId });               
                    fetch(req)
                    .then(response => response.json())
                    .then(data => {
                        console.log(data);
                    })
                    .catch(e => console.error(e));
                });
            }
        }
        

    //text editor
        let editor;
        ClassicEditor
            .create(document.querySelector('.ckeditor'), {
                removePlugins: ["ImageUpload", "MediaEmbed"],
            })
            .catch(error => {
                console.error(error);
            });

    //ajax request for delete pictures
        let request = new Requests();
        request.delPictures();

    //Replace the real filename in the input download field.
        ((document)=>{
            const input = document.getElementById("article_imgsFile");
            const placeholder = input.parentElement.querySelector(".custom-file-label");
            input.addEventListener("change", ()=>{
                    let value = input.value.replace('C:\\fakepath\\', '').trim();
                    placeholder.textContent = "" !== value ? value : (input.getAttribute('placeholder') || '');
                });
        })(document);

    //Gallery photo
        HesGallery.init();
        HesGallery.setOptions({
            wrapAround: true,
            disableScrolling: true,
            keyboardControl: true
        });

    //Add Soundcloud Field
    {% if form.api_data.children != [] %}
        document.getElementById("list_sc").style.flexBasis = "300%";
        document.getElementById("list_sc").style.flexBasis = "25px 20px 20px 20px";
    {% endif %}
        document.getElementById("add_form_field").addEventListener("click", ()=>{
            document.getElementById("list_sc").style.flexBasis = "300%";
            document.getElementById("list_sc").style.flexBasis = "25px 20px 20px 20px";
        });

        let addInput = new addField(
            document.getElementById("add_sc_btn"), 
            document.getElementsByClassName("api_data")[0],
            document.getElementsByClassName("api_data")[0].getAttribute("data-prototype")
            );
        addInput.init();
    </script>
{% endblock %}